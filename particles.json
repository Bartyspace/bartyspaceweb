import Particles from "astro-particles";
import type { ISourceOptions } from "tsparticles-engine";
 
 const options: ISourceOptions = {
  autoPlay: true,
  detectRetina: true,
  fpsLimit: 120,
  fullScreen: {
    enable: true,
    zIndex: -10,
  },
  interactivity: {
    detectsOn: "canvas",
    events: {
      onClick: {
        enable: false,
        mode: "push",
      },
      onDiv: {
        selectors: [],
        enable: false,
        mode: [],
        type: "circle",
      },
      onHover: {
        enable: true,
        mode: "connect",
        parallax: {
          enable: false,
          force: 2,
          smooth: 10,
        },
      },
      resize: false,
    },
    modes: {
      attract: {
        distance: 200,
        duration: 0.4,
        speed: 1,
      },
      bounce: {
        distance: 200,
      },
      bubble: {
        distance: 400,
        duration: 2,
        opacity: 0.8,
        size: 40,
      },
      connect: {
        distance: 150,
        links: {
          opacity: 0.3,
        },
        radius: 100,
      },
      grab: {
        distance: 400,
        links: {
          blink: false,
          consent: false,
          opacity: 1,
        },
      },
      light: {
        area: {
          gradient: {
            start: {
              value: "#ffffff",
            },
            stop: {
              value: "#000000",
            },
          },
          radius: 1000,
        },
        shadow: {
          color: {
            value: "#000000",
          },
          length: 2000,
        },
      },
      push: {
        quantity: 4,
      },
      remove: {
        quantity: 2,
      },
      repulse: {
        distance: 200,
        duration: 0.4,
        speed: 1,
      },
      slow: {
        factor: 3,
        radius: 200,
      },
      trail: {
        delay: 1,
        quantity: 1,
        particles: {
          bounce: {
            horizontal: {
              random: {},
            },
            vertical: {
              random: {},
            },
          },
          collisions: {
            bounce: {
              horizontal: {
                random: {},
              },
              vertical: {
                random: {},
              },
            },
          },
          color: {
            animation: {},
          },
          life: {
            delay: {
              random: {},
            },
            duration: {
              random: {},
            },
          },
          links: {
            shadow: {},
            triangles: {},
          },
          move: {
            angle: {},
            attract: {
              rotate: {},
            },
            gravity: {},
            noise: {
              delay: {
                random: {},
              },
            },
            outModes: {},
            trail: {},
          },
          number: {
            density: {},
          },
          opacity: {
            animation: {},
            random: {},
          },
          rotate: {
            animation: {},
          },
          shadow: {
            offset: {},
          },
          shape: {},
          size: {
            animation: {},
            random: {},
          },

          twinkle: {
            lines: {},
            particles: {},
          },
        },
      },
    },
  },
  manualParticles: [],
  motion: {
    disable: false,
    reduce: {
      factor: 4,
      value: false,
    },
  },
  particles: {
    bounce: {
      horizontal: {
        random: {
          enable: false,
          minimumValue: 0.1,
        },
        value: 1,
      },
      vertical: {
        random: {
          enable: false,
          minimumValue: 0.1,
        },
        value: 1,
      },
    },
    collisions: {
      bounce: {
        horizontal: {
          random: {
            enable: false,
            minimumValue: 0.1,
          },
          value: 1,
        },
        vertical: {
          random: {
            enable: false,
            minimumValue: 0.1,
          },
          value: 1,
        },
      },
      enable: false,
      mode: "bounce",
    },
    color: {
      value: "#000000",
      animation: {
        enable: false,
        speed: 20,
        sync: false,
      },
    },
    life: {
      count: 0,
      delay: {
        random: {
          enable: false,
          minimumValue: 0,
        },
        value: 0,
        sync: false,
      },
      duration: {
        random: {
          enable: false,
          minimumValue: 0.0001,
        },
        value: 0,
        sync: false,
      },
    },
    links: {
      blink: false,
      color: {
        value: "#000000",
      },
      consent: true,
      distance: 120,
      enable: true,
      frequency: 0.7,
      opacity: 0.2,
      shadow: {
        blur: 20,
        color: {
          value: "#000000",
        },
        enable: false,
      },
      triangles: {
        enable: true,
        frequency: 1.2,
      },
      width: 1,
      warp: false,
    },
    move: {
      angle: {
        offset: 45,
        value: 90,
      },
      attract: {
        enable: false,
        rotate: {
          x: 600,
          y: 1200,
        },
      },
      direction: "none",
      distance: 0,
      enable: true,
      gravity: {
        acceleration: 9.81,
        enable: false,
        maxSpeed: 50,
      },
      noise: {
        delay: {
          random: {
            enable: false,
            minimumValue: 0,
          },
          value: 0,
        },
        enable: false,
      },
      outModes: {
        default: "out",
        bottom: "out",
        left: "out",
        right: "out",
        top: "out",
      },
      random: true,
      size: false,
      speed: 0.3,
      straight: false,
      trail: {
        enable: false,
        length: 10,
        fillColor: {
          value: "#000000",
        },
      },
      vibrate: false,
      warp: false,
    },
    number: {
      density: {
        enable: false,
        area: 1000,
        factor: 1000,
      },
      limit: 100,
      value: 100,
    },
    opacity: {
      random: {
        enable: false,
        minimumValue: 0.1,
      },
      value: 1,
      animation: {
        enable: false,
        minimumValue: 0.1,
        speed: 3,
        sync: false,
      },
    },
    reduceDuplicates: false,
    rotate: {
      random: true,
      value: 0,
      animation: {
        enable: false,
        speed: 0,
        sync: false,
      },
      direction: "clockwise",
      path: false,
    },
    shadow: {
      blur: 0,
      color: {
        value: "#000000",
      },
      enable: false,
      offset: {
        x: 0,
        y: 0,
      },
    },
    shape: {
      options: {
        circle: {},
        image: {
          src: "https://cdn.matteobruni.it/images/particles/github.svg",
          width: 100,
          height: 100,
        },
      },
      type: "circle",
    },
    size: {
      random: {
        enable: false,
        minimumValue: 1,
      },
      value: 2,
      animation: {
        destroy: "none",
        enable: false,
        minimumValue: 0.1,
        speed: 20,
        startValue: "max",
        sync: false,
      },
    },
    stroke: {
      width: 0,
      color: {
        value: "",
        animation: {
          enable: false,
          speed: 0,
          sync: false,
        },
      },
      opacity: 1,
    },
    twinkle: {
      lines: {
        enable: false,
        frequency: 10000,
        opacity: 0.17,
        color: {
          value: "#000000",
        },
      },
      particles: {
        enable: false,
        frequency: 0.05,
        opacity: 1,
        color: {
          value: "#9a7e7e",
        },
      },
    },
  },
  pauseOnBlur: true,
  themes: [],
};
<div class="absolute">
    <Particles id="tsparticles" options={options} init="particlesInit" />
    <script >
      import {
        type Container,
        type Engine,
        tsParticles,
      } from "tsparticles-engine";
      import { loadFull } from "tsparticles";

      declare global {
        interface Window {
          particlesInit: any;
        }
      }
      declare global {
        interface Window {
          particlesLoaded: any;
        }
      }
      // the function name is the parameter passed to the init attribute
      // required
      // add the function to window is mandatory, it will be searched there
      window.particlesInit = async function (engine: Engine) {
        await loadFull(engine);
      };
      // the function name is the parameter passed to the loaded attribute
      // optional
      // add the function to window is mandatory, it will be searched there
      //window.particlesLoaded = function (container: Container) {
      //    console.log("particlesLoaded callback");
      //}
    </script>
  </div>